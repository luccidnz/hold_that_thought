// Mocks generated by Mockito 5.4.4 from annotations
// in hold_that_thought/test/routing/deeplink_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:hold_that_thought/routing/deeplink_source.dart' as _i2;
import 'package:hold_that_thought/routing/navigation_service.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DeepLinkSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeepLinkSource extends _i1.Mock implements _i2.DeepLinkSource {
  MockDeepLinkSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<String?> get linkStream => (super.noSuchMethod(
        Invocation.getter(#linkStream),
        returnValue: _i3.Stream<String?>.empty(),
      ) as _i3.Stream<String?>);

  @override
  _i3.Future<String?> getInitialLink() => (super.noSuchMethod(
        Invocation.method(
          #getInitialLink,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i4.NavigationService {
  MockNavigationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void go(String? location) => super.noSuchMethod(
        Invocation.method(
          #go,
          [location],
        ),
        returnValueForMissingStub: null,
      );
}
