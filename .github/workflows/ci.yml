name: CI

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  build_android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { lfs: true }
      - name: Git LFS
        run: |
          git lfs install
          git lfs fetch --all || true
          git lfs checkout
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle
      - uses: subosito/flutter-action@v2
        with:
          channel: 'beta'
          flutter-version: '3.24.0-0.1.pre'
          cache: true
          cache-key: 'flutter-beta'
      - name: Install Android SDK (cmdline-tools)
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: latest
          packages: >
            platform-tools
            platforms;android-34
            build-tools;34.0.0
          accept-android-sdk-licenses: true
      - name: Debug environment
        run: |
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          ls -la android/ || true
      - name: Flutter pub get (retry)
        run: |
          for i in {1..4}; do flutter pub get && break || sleep 10; done
      - name: Flutter doctor
        run: flutter doctor -v
      - name: Make gradlew executable
        working-directory: ./android
        run: chmod +x ./gradlew
      - name: Build Android Debug
        run: flutter build apk --debug --no-shrink --verbose
      - name: List build outputs
        run: |
          find build -name "*.apk" || true
      - name: Upload Android Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: Android Debug APK
          path: |
            build/app/outputs/flutter-apk/app-debug.apk
            build/app/outputs/apk/debug/app-debug.apk
          if-no-files-found: warn

  build_windows:
    runs-on: windows-latest
    steps:
      - name: Enable long paths
        run: git config --system core.longpaths true

      - uses: actions/checkout@v4
        with: { lfs: true }

      - name: Git LFS
        shell: bash
        run: |
          git lfs install
          git lfs fetch --all || true
          git lfs checkout

      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          # Keep using your pinned flutter if already set at top; otherwise uncomment below:
          # flutter-version: '3.24.0'
          cache: true

      - name: Enable Windows desktop
        shell: bash
        run: flutter config --enable-windows-desktop

      - name: Flutter pub get (retry)
        shell: bash
        run: |
          for i in {1..4}; do flutter pub get && break || sleep 10; done

      - name: Doctor
        shell: bash
        run: flutter doctor -v

      - name: Build Windows Release
        shell: bash
        run: flutter build windows --release

      - name: Upload Windows Release
        uses: actions/upload-artifact@v4
        with:
          name: Windows Release
          path: build/windows/runner/Release/**
          if-no-files-found: error

  android_qa_smoke:
    needs: build_android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
      # Download the APK artifact from the build job
      - uses: actions/download-artifact@v4
        with:
          name: Android Debug APK
      # Run a simple smoke test by installing and launching the APK on an emulator
      - name: Run smoke test via adb
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          arch: x86_64
          target: google_apis
          script: |
            set -e
            echo "Installing app-debug.apk"
            adb install app-debug.apk
            echo "Launching MainActivity"
            adb shell am start -n com.holdthatthought/.MainActivity
            echo "Waiting for app to start..."
            sleep 30
            pid=$(adb shell pidof com.holdthatthought || true)
            if [ -z "$pid" ]; then
              echo "App did not start correctly"
              exit 1
            else
              echo "App started successfully with PID $pid"
            fi

  notify:
    needs: [build_android, build_windows]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Comment on PR when artifacts are ready
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const message = `âœ… Artifacts are ready:
            - Windows Release (zip)
            - Android Debug APK
            Please complete Artifacts-only QA and, if it matches the checklist, comment \`QA: PASS\``;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });
