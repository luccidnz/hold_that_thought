name: CI

on:
  pull_request:
    branches: ["**"]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  checks: read
  pull-requests: write

jobs:
  windows_build:
    name: Windows Desktop (Release)
    runs-on: windows-latest
    steps:
      - name: Checkout (with LFS)
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Ensure LFS files present
        run: |
          git lfs install
          git lfs fetch --all
          git lfs checkout

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Enable Windows desktop
        shell: bash
        run: flutter config --enable-windows-desktop

      - name: flutter pub get (retry)
        shell: bash
        run: |
          for i in {1..3}; do flutter pub get && break || sleep 10; done

      - name: Build Windows release
        shell: bash
        run: flutter build windows --release

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows Release
          path: |
            build/windows/**/*.exe
            build/windows/**/*.msix
          if-no-files-found: warn

  android_build:
    name: Android (Debug APK)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with LFS)
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Ensure LFS files present
        run: |
          git lfs install
          git lfs fetch --all
          git lfs checkout

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: flutter pub get (retry)
        run: |
          for i in {1..3}; do flutter pub get && break || sleep 10; done

      - name: Build debug APK
        run: flutter build apk --debug --no-shrink

      - name: Upload Android artifact
        uses: actions/upload-artifact@v4
        with:
          name: Android Debug APK
          path: build/app/outputs/flutter-apk/app-debug.apk
          if-no-files-found: warn

  # Optional: keep the emulator smoke as a separate "signal" job.
  android_qa_smoke:
    name: Android QA Smoke
    runs-on: ubuntu-latest
    needs: android_build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
      - name: Run instrumentation on emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          arch: x86_64
          script: ./gradlew -p android connectedAndroidTest

  notify_when_ready:
    name: Notify PR when artifacts ready
    runs-on: ubuntu-latest
    needs: [windows_build, android_build]
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Comment to PR
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            CI checks are green and artifacts are available (Windows Release + Android Debug APK). Please complete Artifacts-only QA and, if it matches the checklist, comment **"QA: PASS"** on the PR. Thanks!
      
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-lcov
          path: coverage/lcov.info

  build_windows:
    name: Build Windows App
    needs: lint_and_test
    runs-on: windows-latest
    timeout-minutes: 60
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Enable Windows
        run: flutter config --enable-windows-desktop
      
      - name: Build Windows
        run: flutter build windows --release
      
      - name: Create .env file
        run: |
          echo "SUPABASE_URL=\${{ secrets.SUPABASE_URL }}" > build/windows/runner/Release/.env
          echo "SUPABASE_ANON_KEY=\${{ secrets.SUPABASE_ANON_KEY }}" >> build/windows/runner/Release/.env
          echo "FEATURE_AUTH_ENABLED=false" >> build/windows/runner/Release/.env
          echo "FEATURE_RAG_ENABLED=false" >> build/windows/runner/Release/.env
          echo "FEATURE_E2EE_ENABLED=false" >> build/windows/runner/Release/.env
          echo "FEATURE_TELEMETRY_ENABLED=false" >> build/windows/runner/Release/.env
      
      - name: Create zip archive
        run: |
          cd build/windows/runner/Release
          7z a -tzip ../../../windows-release.zip *
      
      - name: Upload Windows build
        uses: actions/upload-artifact@v4
        with:
          name: windows-app
          path: build/windows-release.zip
          retention-days: 7

  build_android:
    name: Build Android App
    needs: lint_and_test
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Create .env file
        run: |
          echo "SUPABASE_URL=\${{ secrets.SUPABASE_URL }}" > android/app/src/main/assets/.env
          echo "SUPABASE_ANON_KEY=\${{ secrets.SUPABASE_ANON_KEY }}" >> android/app/src/main/assets/.env
          echo "FEATURE_AUTH_ENABLED=false" >> android/app/src/main/assets/.env
          echo "FEATURE_RAG_ENABLED=false" >> android/app/src/main/assets/.env
          echo "FEATURE_E2EE_ENABLED=false" >> android/app/src/main/assets/.env
          echo "FEATURE_TELEMETRY_ENABLED=false" >> android/app/src/main/assets/.env
      
      - name: Build Android Debug APK
        run: flutter build apk --debug
      
      - name: Upload Android Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk
          retention-days: 7
