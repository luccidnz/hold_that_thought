name: CI
on:
  pull_request:
  push:
    branches: ['**']
  workflow_dispatch:

permissions:
  contents: write
  actions: read
  checks: write
  statuses: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  CI: true

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Git LFS
        run: |
          git lfs install --local
          git lfs fetch --all || true
          git lfs checkout || true

  build_windows:
    runs-on: windows-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
        with: { lfs: true }

      - name: Git LFS
        run: |
          git lfs install
          git lfs fetch --all
          git lfs checkout

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Pub get
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --release -v

      - uses: actions/upload-artifact@v4
        with:
          name: Windows Release
          path: build/windows/x64/runner/Release/**

      - name: Upload build logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-windows
          path: |
            **/*.log
            **/build/**/outputs/**/*.apk
            **/build/**/outputs/**/*.aab
          if-no-files-found: ignore

  build_android:
    name: Build Android Debug
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      pull-requests: write
    steps:
      - name: Checkout (with LFS)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Git LFS
        run: |
          git lfs install
          git lfs fetch --all
          git lfs checkout

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          accept-android-sdk-licenses: true
          packages: |
            platform-tools
            platforms;android-34
            build-tools;34.0.0
            cmdline-tools;latest

      # (optional but helpful for debugging)
      - name: Show Android packages
        run: |
          sdkmanager --list || true
          echo "ANDROID_HOME=$ANDROID_HOME"
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"

      - name: Setup Flutter (stable)
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter doctor
        run: flutter doctor -v

      - name: flutter pub get (retry)
        shell: bash
        run: |
          for i in {1..3}; do
            flutter pub get && break
            echo "pub get failed ($i). Retrying in 10s…"
            sleep 10
          done

      - name: Build Android Debug
        run: ./gradlew --no-daemon assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: Android Debug APK
          path: android/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error

      - name: Upload build logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-android
          path: |
            **/*.log
            **/build/**/outputs/**/*.apk
            **/build/**/outputs/**/*.aab
          if-no-files-found: ignore

      # Helpful failure note on PR with run URL
      - name: Comment failure to PR
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const run = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: 3,
              body: `❌ Android build failed. See run: ${run}`
            });

  android_qa_smoke:
    runs-on: ubuntu-latest
    needs: build_android
    steps:
      - uses: actions/checkout@v4
      - uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          script: echo "android smoke ok"

  notify:
    runs-on: ubuntu-latest
    needs: [build_windows, build_android]
    if: ${{ always() && github.event_name == 'pull_request' }}
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const okWin = '${{ needs.build_windows.result }}' === 'success';
            const okAnd = '${{ needs.build_android.result }}' === 'success';
            const msg = (okWin && okAnd)
              ? 'Artifacts ready: **Windows Release** and **Android Debug APK**. Please run Artifacts-only QA. If all good, comment `QA: PASS`.'
              : `Build status — Windows: ${{ needs.build_windows.result }}, Android: ${{ needs.build_android.result }}. See Checks for details.`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: msg
            });
