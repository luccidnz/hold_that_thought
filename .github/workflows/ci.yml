

  verify_release_assets:
    name: Verify release assets (checksums + APK version)
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [release_assets]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Android SDK toolchain (aapt)
        uses: android-actions/setup-android@v3
      - name: Download release assets
        run: |
          mkdir -p verify
          gh release download "${GITHUB_REF_NAME}" -D verify
          ls -la verify || true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Verify SHA256 checksums
        shell: bash
        run: |
          set -e
          cd verify
          shopt -s nullglob
          for f in *.apk *.zip *.aab; do
            [ -f "$f" ] || continue
            sha_calc=$( (sha256sum "$f" || shasum -a 256 "$f") | awk '{print $1}' )
            sha_file="${f}.sha256"
            if [ ! -f "$sha_file" ]; then
              echo "❌ Missing checksum for $f" && exit 1
            fi
            sha_list=$(awk '{print $1}' "$sha_file")
            if ! echo "$sha_list" | grep -q "$sha_calc"; then
              echo "❌ SHA mismatch for $f"; echo " expected one of: $sha_list"; echo "     computed: $sha_calc"; exit 1
            fi
            echo "✅ $f checksum OK"
          done
      - name: Check APK version matches tag
        shell: bash
        run: |
          set -e
          cd verify
          apk=$(ls *.apk 2>/dev/null | head -n1 || true)
          if [ -z "$apk" ]; then
            echo "ℹ️ No APK to validate; skipping." ; exit 0
          fi
          # get aapt from the newest build-tools we have
          AAPT=$(ls "$ANDROID_HOME/build-tools"/*/aapt 2>/dev/null | sort -V | tail -n1 || true)
          if [ -z "$AAPT" ]; then echo "⚠️ aapt not found; skipping APK version check"; exit 0; fi
          ver=$("$AAPT" dump badging "$apk" | awk -F"'" '/versionName=/{print $4; exit}')
          tag="${GITHUB_REF_NAME#v}"
          if [ "$ver" != "$tag" ] && [ "$ver" != "${tag%%-rc*}" ]; then
            echo "❌ APK versionName=$ver does not match tag=$tag"; exit 1
          fi
          echo "✅ APK version $ver matches tag $tag" 
