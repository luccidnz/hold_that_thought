name: CI
on:
  pull_request:
  push:
    branches: ['**']
  workflow_dispatch:

permissions:
  contents: write
  actions: read
  checks: write
  statuses: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  CI: true

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Git LFS
        run: |
          git lfs install --local
          git lfs fetch --all || true
          git lfs checkout || true

  build_windows:
    runs-on: windows-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
        with: { lfs: true }
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: flutter pub get (retry)
        shell: bash
        run: |
          set -e
          for i in 1 2 3; do flutter pub get && break || sleep $((i*5)); done
      - name: Build Windows Release
        run: flutter build windows --release
      - uses: actions/upload-artifact@v4
        with:
          name: Windows Release
          path: build/windows/x64/runner/Release/**

  build_android:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
        with: { lfs: true }
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: flutter pub get (retry)
        shell: bash
        run: |
          set -e
          for i in 1 2 3; do flutter pub get && break || sleep $((i*5)); done
      - name: Build Android Debug
        run: flutter build apk --debug
      - uses: actions/upload-artifact@v4
        with:
          name: Android Debug APK
          path: build/app/outputs/flutter-apk/*debug*.apk

  android_qa_smoke:
    runs-on: ubuntu-latest
    needs: build_android
    steps:
      - uses: actions/checkout@v4
      - uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          script: echo "android smoke ok"

  notify:
    runs-on: ubuntu-latest
    needs: [build_windows, build_android]
    if: ${{ always() && github.event_name == 'pull_request' }}
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const okWin = '${{ needs.build_windows.result }}' === 'success';
            const okAnd = '${{ needs.build_android.result }}' === 'success';
            const msg = (okWin && okAnd)
              ? 'Artifacts ready: **Windows Release** and **Android Debug APK**. Please run Artifacts-only QA. If all good, comment `QA: PASS`.'
              : `Build status â€” Windows: ${{ needs.build_windows.result }}, Android: ${{ needs.build_android.result }}. See Checks for details.`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: msg
            });
